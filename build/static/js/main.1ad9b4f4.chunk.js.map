{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","className","style","mode","backgroundColor","color","id","type","Navbar","href","title","to","homeLink","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","placeholder","onChange","event","target","value","rows","newText","toUpperCase","showAlert","toLowerCase","document","querySelector","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capatilize","msg","defaultProps","App","darkStyle","setDarkStyle","setalert","setTimeout","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ad9b4f4.chunk.js","sourcesContent":["\r\nexport default function About(props){\r\n\r\n  return (\r\n    <div className=\"container my-5\" style = {props.mode === \"dark\"?{backgroundColor:\"#202124\",color:\"white\"}:{backgroundColor:\"white\",color:\"#202124\"}}>\r\n      <h2>About Us</h2>\r\n      <div className=\"accordion\"  id=\"accordionExample\">\r\n        <div className=\"accordion-item\" style = {props.mode === \"dark\"?{backgroundColor:\"#202124\",color:\"white\"}:{backgroundColor:\"white\",color:\"#202124\"}}>\r\n          <h2 className=\"accordion-header\"  id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              style = {props.mode === \"dark\"?{backgroundColor:\"#202124\",color:\"white\"}:{backgroundColor:\"white\",color:\"#202124\"}}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div  className=\"accordion-body\">\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style = {props.mode === \"dark\"?{backgroundColor:\"#202124\",color:\"white\"}:{backgroundColor:\"white\",color:\"#202124\"}}>\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              style = {props.mode === \"dark\"?{backgroundColor:\"#202124\",color:\"white\"}:{backgroundColor:\"white\",color:\"#202124\"}}className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n             \r\n              >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" >\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style = {props.mode === \"dark\"?{backgroundColor:\"#202124\",color:\"white\"}:{backgroundColor:\"white\",color:\"#202124\"}}>\r\n          <h2 className=\"accordion-header\"  id=\"headingThree\">\r\n            <button\r\n              style = {props.mode === \"dark\"?{backgroundColor:\"#202124\",color:\"white\"}:{backgroundColor:\"white\",color:\"#202124\"}}\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" >\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n          <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n              <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                  <li className=\"nav-item\">\r\n                    <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.homeLink}</Link>\r\n                  </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link className=\"nav-link\" to=\"/about\">About us</Link>\r\n                    </li>\r\n                </ul>\r\n                <form className=\"d-flex\">\r\n                  <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                      <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\" />\r\n                      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'?'dark':'light'} mode</label>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    homeLink : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : \"Enter Titile\",\r\n    homeLink : \"Enter the the home link\"\r\n}","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const clickHandler = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Upppercase\",\"success\");\r\n  };\r\n  const clickHandler2 = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Lowercase\",\"success\");\r\n  };\r\n  const clickHandler3 = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Cleared\",\"success\");\r\n  };\r\n  const clickHandler4 = () => {\r\n    let newText = document.querySelector(\"#myBox\");\r\n    newText.select();\r\n    navigator.clipboard.writeText(newText.value);\r\n    props.showAlert(\"Copied\",\"success\");\r\n  };\r\n  const clickHandler5 = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Remove\",\"success\");\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"Container\">\r\n        <h1 style={props.mode===\"light\" ? {backgroundColor:\"white\", color:\"#202124\"}:{backgroundColor:\"#202124\",color:\"white\" }}>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control row-30\"\r\n            id=\"myBox\"\r\n            placeholder=\"Enter the Text Here\"\r\n            onChange={handleChange}\r\n            value={text}\r\n            rows=\"10\"\r\n            style={props.mode===\"light\" ? {backgroundColor:\"white\", color:\"#202124\"}:{backgroundColor:\"#202124\",color:\"white\" }}></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={clickHandler}>\r\n          Convert to UPPERCASE\r\n        </button>\r\n        <button className=\"btn btn-primary my-3  mx-1\" onClick={clickHandler2}>\r\n          Convert to lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={clickHandler3}>\r\n          Clear\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={clickHandler4}>\r\n          Copy\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={clickHandler5}>\r\n          Clear Extra Spaces\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <h1 style={props.mode===\"light\" ? {backgroundColor:\"white\", color:\"#202124\"} : {backgroundColor:\"#202124\",color:\"white\" }}>Text Summary </h1>\r\n        <p style={props.mode===\"light\" ? {backgroundColor:\"white\", color:\"#202124\"} : {backgroundColor:\"#202124\",color:\"white\" }}> \r\n          No. of Characters - {text.length} <br />\r\n          No. of words - {text.split(\" \").length} <br />\r\n          Time required to read this - {0.008 *\r\n            text.split(\" \").length} Minutes <br />\r\n        </p>\r\n\r\n        <h2 style={props.mode===\"light\" ? {backgroundColor:\"white\", color:\"#202124\"}:{backgroundColor :\"#202124\",color : \"white\" }}>Preview</h2>\r\n        <p style={props.mode===\"light\" ? {backgroundColor : \"white\", color : \"#202124\"}:{backgroundColor:\"#202124\",color:\"white\" }}>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capatilize= (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capatilize(props.alert.type)}</strong> {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const[darkStyle, setDarkStyle] = useState('light');\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (msg,type) => {\n    setalert({\n        msg : msg,\n        type : type\n      })\n      setTimeout(()=>{\n        setalert(null)\n      },1500)\n  }\n\n  const toggleMode = () => {\n\n    if (darkStyle === 'light'){\n\n        setDarkStyle('dark')\n        document.body.style.backgroundColor = \"#202124\";\n        showAlert(\"Dark Mode Enabled\",\"success\");\n\n    }else{\n\n        setDarkStyle('light')\n        document.body.style.backgroundColor = \"white\"\n        showAlert(\"Light Mode Enabled\",\"success\");\n\n    }\n\n  }\n\n  return (\n    <>\n      <Router>\n       <Navbar title =\"Karan\" homeLink=\"Home  \" mode ={darkStyle} toggleMode={toggleMode} />\n       <Alert alert={alert} />\n       <div className=\"container my-3\">\n       <Switch>\n          <Route path=\"/about\">\n            <About mode ={darkStyle} />\n          </Route>\n        \n          <Route path=\"/\">\n          <TextForm showAlert={showAlert} heading = \"Enter the your Text Here -\" mode ={darkStyle}/>\n          </Route>\n        </Switch>\n       \n       </div>\n       </Router>\n       </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}